"use strict";(self.webpackChunksuperbench_website=self.webpackChunksuperbench_website||[]).push([[510],{5680:(e,t,a)=>{a.d(t,{xA:()=>o,yg:()=>u});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function g(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,o=g(e,["components","mdxType","originalType","parentName"]),d=m(a),u=r,s=d["".concat(p,".").concat(u)]||d[u]||y[u]||l;return a?n.createElement(s,i(i({ref:t},o),{},{components:a})):n.createElement(s,i({ref:t},o))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var g={};for(var p in t)hasOwnProperty.call(t,p)&&(g[p]=t[p]);g.originalType=e,g.mdxType="string"==typeof e?e:r,i[1]=g;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8465:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>p,default:()=>d,frontMatter:()=>g,metadata:()=>m,toc:()=>o});var n=a(8168),r=a(8587),l=(a(6540),a(5680)),i=["components"],g={slug:"release-sb-v0.3",title:"Releasing SuperBench v0.3",author:"Peng Cheng",author_title:"SuperBench Team",author_url:"https://github.com/cp5555",author_image_url:"https://github.com/cp5555.png",tags:["superbench","announcement","release"]},p=void 0,m={permalink:"/superbenchmark/blog/release-sb-v0.3",editUrl:"https://github.com/microsoft/superbenchmark/edit/main/website/blog/2021-09-22-release-0-3.md",source:"@site/blog/2021-09-22-release-0-3.md",title:"Releasing SuperBench v0.3",description:"We are very happy to announce that SuperBench 0.3.0 version is officially released today!",date:"2021-09-22T00:00:00.000Z",formattedDate:"September 22, 2021",tags:[{label:"superbench",permalink:"/superbenchmark/blog/tags/superbench"},{label:"announcement",permalink:"/superbenchmark/blog/tags/announcement"},{label:"release",permalink:"/superbenchmark/blog/tags/release"}],readingTime:3.11,truncated:!1,prevItem:{title:"Releasing SuperBench v0.4",permalink:"/superbenchmark/blog/release-sb-v0.4"},nextItem:{title:"Releasing SuperBench v0.2",permalink:"/superbenchmark/blog/release-sb-v0.2"}},o=[{value:"SuperBench 0.3.0 Release Notes",id:"superbench-030-release-notes",children:[{value:"SuperBench Framework",id:"superbench-framework",children:[]},{value:"Single-node Validation",id:"single-node-validation",children:[]},{value:"AMD GPU Support",id:"amd-gpu-support",children:[]},{value:"Bug Fix",id:"bug-fix",children:[]},{value:"Other Improvement",id:"other-improvement",children:[]}]}],y={toc:o};function d(e){var t=e.components,a=(0,r.A)(e,i);return(0,l.yg)("wrapper",(0,n.A)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("p",null,"We are very happy to announce that ",(0,l.yg)("strong",{parentName:"p"},"SuperBench 0.3.0 version")," is officially released today!"),(0,l.yg)("p",null,"You can install and try superbench by following ",(0,l.yg)("a",{parentName:"p",href:"https://microsoft.github.io/superbenchmark/docs/getting-started/installation"},"Getting Started Tutorial"),"."),(0,l.yg)("h2",{id:"superbench-030-release-notes"},"SuperBench 0.3.0 Release Notes"),(0,l.yg)("h3",{id:"superbench-framework"},"SuperBench Framework"),(0,l.yg)("h4",{id:"runner"},"Runner"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Implement MPI mode.")),(0,l.yg)("h4",{id:"benchmarks"},"Benchmarks"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Support Docker benchmark.")),(0,l.yg)("h3",{id:"single-node-validation"},"Single-node Validation"),(0,l.yg)("h4",{id:"micro-benchmarks"},"Micro Benchmarks"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"Memory (Tool: NVIDIA/AMD Bandwidth Test Tool)"),(0,l.yg)("table",{parentName:"li"},(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Metrics"),(0,l.yg)("th",{parentName:"tr",align:null},"Unit"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"H2D_Mem_BW_GPU"),(0,l.yg)("td",{parentName:"tr",align:null},"GB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"host-to-GPU bandwidth for each GPU")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"D2H_Mem_BW_GPU"),(0,l.yg)("td",{parentName:"tr",align:null},"GB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"GPU-to-host bandwidth  for each GPU"))))),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"IBLoopback (Tool: PerfTest \u2013 Standard RDMA Test Tool)"),(0,l.yg)("table",{parentName:"li"},(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Metrics"),(0,l.yg)("th",{parentName:"tr",align:null},"Unit"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"IB_Write"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"The IB write loopback throughput with different message sizes")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"IB_Read"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"The IB read loopback throughput with different message sizes")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"IB_Send"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"The IB send loopback throughput with different message sizes"))))),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"NCCL/RCCL (Tool: NCCL/RCCL Tests)"),(0,l.yg)("table",{parentName:"li"},(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Metrics"),(0,l.yg)("th",{parentName:"tr",align:null},"Unit"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"NCCL_AllReduce"),(0,l.yg)("td",{parentName:"tr",align:null},"GB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"The NCCL AllReduce performance with different message sizes")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"NCCL_AllGather"),(0,l.yg)("td",{parentName:"tr",align:null},"GB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"The NCCL AllGather performance with different message sizes")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"NCCL_broadcast"),(0,l.yg)("td",{parentName:"tr",align:null},"GB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"The NCCL Broadcast performance with different message sizes")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"NCCL_reduce"),(0,l.yg)("td",{parentName:"tr",align:null},"GB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"The NCCL Reduce performance with different message sizes")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"NCCL_reduce_scatter"),(0,l.yg)("td",{parentName:"tr",align:null},"GB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"The NCCL ReduceScatter performance with different message sizes"))))),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"Disk (Tool: FIO \u2013 Standard Disk Performance Tool)"),(0,l.yg)("table",{parentName:"li"},(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Metrics"),(0,l.yg)("th",{parentName:"tr",align:null},"Unit"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Seq_Read"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"Sequential read performance")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Seq_Write"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"Sequential write performance")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Rand_Read"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"Random read performance")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Rand_Write"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"Random write performance")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Seq_R/W_Read"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"Read performance in sequential read/write, fixed measurement (read:write = 4:1)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Seq_R/W_Write"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"Write performance in sequential read/write (read:write = 4:1)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Rand_R/W_Read"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"Read performance in random read/write (read:write = 4:1)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Rand_R/W_Write"),(0,l.yg)("td",{parentName:"tr",align:null},"MB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"Write performance in random read/write (read:write = 4:1)"))))),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"H2D/D2H SM Transmission Bandwidth (Tool: MSR-A build)"),(0,l.yg)("table",{parentName:"li"},(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Metrics"),(0,l.yg)("th",{parentName:"tr",align:null},"Unit"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"H2D_SM_BW_GPU"),(0,l.yg)("td",{parentName:"tr",align:null},"GB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"host-to-GPU bandwidth using GPU kernel for each GPU")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"D2H_SM_BW_GPU"),(0,l.yg)("td",{parentName:"tr",align:null},"GB/s"),(0,l.yg)("td",{parentName:"tr",align:null},"GPU-to-host bandwidth using GPU kernel for each GPU")))))),(0,l.yg)("h3",{id:"amd-gpu-support"},"AMD GPU Support"),(0,l.yg)("h4",{id:"docker-image-support"},"Docker Image Support"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"ROCm 4.2 PyTorch 1.7.0"),(0,l.yg)("li",{parentName:"ul"},"ROCm 4.0 PyTorch 1.7.0")),(0,l.yg)("h4",{id:"micro-benchmarks-1"},"Micro Benchmarks"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"Kernel Launch (Tool: MSR-A build)"),(0,l.yg)("table",{parentName:"li"},(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Metrics"),(0,l.yg)("th",{parentName:"tr",align:null},"Unit"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Kernel_Launch_Event_Time"),(0,l.yg)("td",{parentName:"tr",align:null},"Time (ms)"),(0,l.yg)("td",{parentName:"tr",align:null},"Dispatch latency measured in GPU time using hipEventRecord()")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"Kernel_Launch_Wall_Time"),(0,l.yg)("td",{parentName:"tr",align:null},"Time (ms)"),(0,l.yg)("td",{parentName:"tr",align:null},"Dispatch latency measured in CPU time"))))),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"GEMM FLOPS (Tool: AMD rocblas-bench Tool)"),(0,l.yg)("table",{parentName:"li"},(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Metrics"),(0,l.yg)("th",{parentName:"tr",align:null},"Unit"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FP64"),(0,l.yg)("td",{parentName:"tr",align:null},"GFLOPS"),(0,l.yg)("td",{parentName:"tr",align:null},"FP64 FLOPS without MatrixCore")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FP32(MC)"),(0,l.yg)("td",{parentName:"tr",align:null},"GFLOPS"),(0,l.yg)("td",{parentName:"tr",align:null},"TF32 FLOPS with MatrixCore")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FP16(MC)"),(0,l.yg)("td",{parentName:"tr",align:null},"GFLOPS"),(0,l.yg)("td",{parentName:"tr",align:null},"FP16 FLOPS with MatrixCore")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"BF16(MC)"),(0,l.yg)("td",{parentName:"tr",align:null},"GFLOPS"),(0,l.yg)("td",{parentName:"tr",align:null},"BF16 FLOPS with MatrixCore")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"INT8(MC)"),(0,l.yg)("td",{parentName:"tr",align:null},"GOPS"),(0,l.yg)("td",{parentName:"tr",align:null},"INT8 FLOPS with MatrixCore")))))),(0,l.yg)("h4",{id:"e2e-benchmarks"},"E2E Benchmarks"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"CNN models -- Use PyTorch torchvision models"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"ResNet: ResNet-50, ResNet-101, ResNet-152"),(0,l.yg)("li",{parentName:"ul"},"DenseNet: DenseNet-169, DenseNet-201"),(0,l.yg)("li",{parentName:"ul"},"VGG: VGG-11, VGG-13, VGG-16, VGG-19\u200b"))),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"BERT -- Use huggingface Transformers"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"BERT"),(0,l.yg)("li",{parentName:"ul"},"BERT Large"))),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"LSTM -- Use PyTorch")),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"GPT-2 -- Use huggingface Transformers"))),(0,l.yg)("h3",{id:"bug-fix"},"Bug Fix"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"VGG models failed on A100 GPU with batch_size=128")),(0,l.yg)("h3",{id:"other-improvement"},"Other Improvement"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"Contribution related"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"Contribute rule"),(0,l.yg)("li",{parentName:"ul"},"System information collection"))),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"Document"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"Add release process doc"),(0,l.yg)("li",{parentName:"ul"},"Add design documents"),(0,l.yg)("li",{parentName:"ul"},"Add developer guide doc for coding style"),(0,l.yg)("li",{parentName:"ul"},"Add contribution rules"),(0,l.yg)("li",{parentName:"ul"},"Add docker image list"),(0,l.yg)("li",{parentName:"ul"},"Add initial validation results")))))}d.isMDXComponent=!0}}]);