"use strict";(self.webpackChunksuperbench_website=self.webpackChunksuperbench_website||[]).push([[4470],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,g=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(g,l(l({ref:t},p),{},{components:n})):r.createElement(g,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4298:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var r=n(8168),a=n(8587),i=(n(6540),n(5680)),l=["components"],o={id:"baseline-generation"},s="Baseline Generation",u={unversionedId:"user-tutorial/baseline-generation",id:"user-tutorial/baseline-generation",isDocsHomePage:!1,title:"Baseline Generation",description:"Introduction",source:"@site/../docs/user-tutorial/baseline-generation.md",sourceDirName:"user-tutorial",slug:"/user-tutorial/baseline-generation",permalink:"/superbenchmark/docs/user-tutorial/baseline-generation",editUrl:"https://github.com/microsoft/superbenchmark/edit/main/website/../docs/user-tutorial/baseline-generation.md",version:"current",frontMatter:{id:"baseline-generation"},sidebar:"docs",previous:{title:"Result Summary",permalink:"/superbenchmark/docs/user-tutorial/result-summary"},next:{title:"Monitor",permalink:"/superbenchmark/docs/user-tutorial/monitor"}},p=[{value:"Introduction",id:"introduction",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Input",id:"input",children:[{value:"Rule File",id:"rule-file",children:[]}]},{value:"Output",id:"output",children:[]}],c={toc:p};function m(e){var t=e.components,n=(0,a.A)(e,l);return(0,i.yg)("wrapper",(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"baseline-generation"},"Baseline Generation"),(0,i.yg)("h2",{id:"introduction"},"Introduction"),(0,i.yg)("p",null,"This tool is to generate a baseline json file based on the raw benchmark results of multiple machines."),(0,i.yg)("h2",{id:"usage"},"Usage"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("a",{parentName:"p",href:"/superbenchmark/docs/getting-started/installation"},"Install SuperBench")," on the local machine.")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Prepare the raw data and rule files on the local machine.")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Generate the baseline file automatically using ",(0,i.yg)("inlineCode",{parentName:"p"},"sb result generate-baseline")," command. The detailed command can be found from ",(0,i.yg)("a",{parentName:"p",href:"/superbenchmark/docs/cli"},"SuperBench CLI"),"."),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sb result generate-baseline --data-file ./results-summary.jsonl --summary-rule-file ./summary-rule.yaml --diagnosis-rule-file ./diagnosis-rule.yaml --output-dir ${output-dir}\n"))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Find the output result file named 'baseline.json' under ${output_dir}."))),(0,i.yg)("h2",{id:"input"},"Input"),(0,i.yg)("p",null,"The input includes 4 files:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Raw Data"),": jsonl file including multiple nodes' results automatically generated by SuperBench runner.")),(0,i.yg)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.yg)("div",{parentName:"div",className:"admonition-heading"},(0,i.yg)("h5",{parentName:"div"},(0,i.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,i.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Tips")),(0,i.yg)("div",{parentName:"div",className:"admonition-content"},(0,i.yg)("p",{parentName:"div"},"Raw data file can be found at ${output-dir}/results-summary.jsonl after each successful run."))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Summary Rule File"),": It uses YAML format and defines how to generate the result summary including how to classify the metrics and what statistical methods (P50, mean, etc.) are applied.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Diagnosis Rule File(optional)"),": It uses YAML format and includes each metrics' rules to filter defective machines for diagnosis, and will not filter machines if not specified.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Previous Baseline File(optional)"),": It is baseline file in json format that got from previous run and plan to merge into the latest baseline."))),(0,i.yg)("h3",{id:"rule-file"},"Rule File"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Summary Rule File")," is the same with rule file defined in ",(0,i.yg)("a",{parentName:"p",href:"/superbenchmark/docs/user-tutorial/result-summary"},"Result Summary")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Diagnosis Rule File")," is the same with rule file defined in ",(0,i.yg)("a",{parentName:"p",href:"/superbenchmark/docs/user-tutorial/data-diagnosis"},"Data Diagnosis")),(0,i.yg)("h2",{id:"output"},"Output"),(0,i.yg)("p",null,"The baseline file (baseline.json) from multiple machines will be generated under ${output_dir}."))}m.isMDXComponent=!0}}]);