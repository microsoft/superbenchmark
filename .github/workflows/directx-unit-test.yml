name: DirectX unit test

on:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

jobs:
  directx-unit-test:
    name: DirectX unit test
    runs-on: [self-hosted, windows, x64, win2004]
    steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install make and git
      shell: pwsh
      run: |
        if (Test-Path C:/ProgramData/chocolatey) {Remove-Item -Path C:/ProgramData/chocolatey -Recurse -Force}
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        choco install make git -y
    - name: Install VS 2022 build tools
      shell: pwsh
      run: |
        $env:SB_HOME=$PWD; ./dockerfile/directx/install-components.bat
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Python and create a virtual environment
      run: |
        python -m venv venv
        echo "VENV_PATH=$(pwd)/venv" >> $GITHUB_ENV
    - name: Create Python alias
      run: |
        %VENV_PATH%/Scripts/Activate.bat
        where.exe python
        mklink python python3
      shell: 
        cmd
    - name: Install dependencies
      run: |
        $env:VENV_PATH/Scripts/Activate.ps1
        python -m pip install --upgrade pip setuptools==65.7
        python -m pip install .[test,nvworker]
        make postinstall
      shell: pwsh
    - name: Run code lint
      run: |
        $env:VENV_PATH/Scripts/Activate.ps1
        python setup.py lint
      shell: pwsh
    - name: Build benchmarks
      run: |
        $env:SB_MICRO_PATH=$PWD make directxbuild
      shell: cmd
    - name: Run unit tests
      run: |
        $env:VENV_PATH/Scripts/Activate.ps1
        $env:SB_MICRO_PATH=$PWD; $env:SB_TEST_CUDA="0"; $env:SB_TEST_ROCM="0"; $env:SB_TEST_PYTORCH="0"; $env:SB_TEST_DIRECTX="1"; python setup.py test
      shell: pwsh
    - name: Report coverage results
      run: |
        curl -s https://codecov.io/bash | bash -s -- -cF directx-unit-test
      shell: pwsh
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

