name: Build Image

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
    - release/*

jobs:
  docker:
    name: Docker build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - tags: superbench/superbench:dev-cuda11.1.1,superbench/superbench:latest
          dockerfile: cuda11.1.1.dockerfile
        - tags: superbench/superbench:dev-rocm4.2
          dockerfile: rocm4.2-pytorch1.7.0.dockerfile
        - tags: superbench/superbench:dev-rocm4.0
          dockerfile: rocm4.0-pytorch1.7.0.dockerfile
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Free disk space
        run: |
          mkdir /tmp/emptydir
          for dir in /usr/share/dotnet /usr/local/lib/android /opt/ghc; do
            sudo rsync -a --delete /tmp/emptydir/ ${dir}
          done
          sudo apt-get clean
          df -h
          echo 'nproc: '$(nproc)
      - name: Prepare metadata
        id: metadata
        run: |
          TAGS=${{ matrix.tags }}
          DOCKERFILE=dockerfile/${{ matrix.dockerfile }}

          CACHE_FROM="type=registry,ref=$(cut -d, -f1 <<< ${TAGS})"
          CACHE_TO=""
          if [ "${{ github.event_name }}" = "push" ]; then
            CACHE_TO="type=inline,mode=max"
          fi

          echo ::set-output name=dockerfile::${DOCKERFILE}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=cache_from::${CACHE_FROM}
          echo ::set-output name=cache_to::${CACHE_TO}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        if: ${{ github.event_name == 'push' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: .
          file: ${{ steps.metadata.outputs.dockerfile }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.metadata.outputs.tags }}
          cache-from: ${{ steps.metadata.outputs.cache_from }}
          cache-to: ${{ steps.metadata.outputs.cache_to }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
            org.opencontainers.image.revision=${{ github.sha }}
      - name: Echo image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
